{"id":"../node_modules/triplesec/lib/aes.js","dependencies":[{"name":"/home/iampeterbanjo/projects/blockstack/publik/package.json","includedInParent":true,"mtime":1564724079568},{"name":"/home/iampeterbanjo/projects/blockstack/publik/.babelrc","includedInParent":true,"mtime":1564637765043},{"name":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/package.json","includedInParent":true,"mtime":1564723609021},{"name":"./algbase","loc":{"line":7,"column":24},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/aes.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/algbase.js"},{"name":"./util","loc":{"line":9,"column":22},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/aes.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/util.js"}],"generated":{"js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var AES, BlockCipher, G, Global, scrub_vec,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  BlockCipher = require('./algbase').BlockCipher;\n\n  scrub_vec = require('./util').scrub_vec;\n\n  Global = (function() {\n    function Global() {\n      var i;\n      this.SBOX = [];\n      this.INV_SBOX = [];\n      this.SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.INV_SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.init();\n      this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n    }\n\n    Global.prototype.init = function() {\n      var d, i, sx, t, x, x2, x4, x8, xi, _i;\n      d = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 256; i = ++_i) {\n          if (i < 128) {\n            _results.push(i << 1);\n          } else {\n            _results.push((i << 1) ^ 0x11b);\n          }\n        }\n        return _results;\n      })();\n      x = 0;\n      xi = 0;\n      for (i = _i = 0; _i < 256; i = ++_i) {\n        sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n        sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n        this.SBOX[x] = sx;\n        this.INV_SBOX[sx] = x;\n        x2 = d[x];\n        x4 = d[x2];\n        x8 = d[x4];\n        t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n        this.SUB_MIX[0][x] = (t << 24) | (t >>> 8);\n        this.SUB_MIX[1][x] = (t << 16) | (t >>> 16);\n        this.SUB_MIX[2][x] = (t << 8) | (t >>> 24);\n        this.SUB_MIX[3][x] = t;\n        t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n        this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);\n        this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);\n        this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);\n        this.INV_SUB_MIX[3][sx] = t;\n        if (x === 0) {\n          x = xi = 1;\n        } else {\n          x = x2 ^ d[d[d[x8 ^ x2]]];\n          xi ^= d[d[xi]];\n        }\n      }\n      return true;\n    };\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  AES = (function(_super) {\n    __extends(AES, _super);\n\n    AES.blockSize = 4 * 4;\n\n    AES.prototype.blockSize = AES.blockSize;\n\n    AES.keySize = 256 / 8;\n\n    AES.prototype.keySize = AES.keySize;\n\n    AES.ivSize = AES.blockSize;\n\n    AES.prototype.ivSize = AES.ivSize;\n\n    function AES(key) {\n      this._key = key.clone();\n      this._doReset();\n    }\n\n    AES.prototype._doReset = function() {\n      var invKsRow, keySize, keyWords, ksRow, ksRows, t, _i, _j;\n      keyWords = this._key.words;\n      keySize = this._key.sigBytes / 4;\n      this._nRounds = keySize + 6;\n      ksRows = (this._nRounds + 1) * 4;\n      this._keySchedule = [];\n      for (ksRow = _i = 0; 0 <= ksRows ? _i < ksRows : _i > ksRows; ksRow = 0 <= ksRows ? ++_i : --_i) {\n        this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);\n      }\n      this._invKeySchedule = [];\n      for (invKsRow = _j = 0; 0 <= ksRows ? _j < ksRows : _j > ksRows; invKsRow = 0 <= ksRows ? ++_j : --_j) {\n        ksRow = ksRows - invKsRow;\n        t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];\n        this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];\n      }\n      return true;\n    };\n\n    AES.prototype.encryptBlock = function(M, offset) {\n      if (offset == null) {\n        offset = 0;\n      }\n      return this._doCryptBlock(M, offset, this._keySchedule, G.SUB_MIX, G.SBOX);\n    };\n\n    AES.prototype.decryptBlock = function(M, offset) {\n      var _ref, _ref1;\n      if (offset == null) {\n        offset = 0;\n      }\n      _ref = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref[0], M[offset + 3] = _ref[1];\n      this._doCryptBlock(M, offset, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);\n      return _ref1 = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref1[0], M[offset + 3] = _ref1[1], _ref1;\n    };\n\n    AES.prototype.scrub = function() {\n      scrub_vec(this._keySchedule);\n      scrub_vec(this._invKeySchedule);\n      return this._key.scrub();\n    };\n\n    AES.prototype._doCryptBlock = function(M, offset, keySchedule, SUB_MIX, SBOX) {\n      var ksRow, round, s0, s1, s2, s3, t0, t1, t2, t3, _i, _ref;\n      s0 = M[offset] ^ keySchedule[0];\n      s1 = M[offset + 1] ^ keySchedule[1];\n      s2 = M[offset + 2] ^ keySchedule[2];\n      s3 = M[offset + 3] ^ keySchedule[3];\n      ksRow = 4;\n      for (round = _i = 1, _ref = this._nRounds; 1 <= _ref ? _i < _ref : _i > _ref; round = 1 <= _ref ? ++_i : --_i) {\n        t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];\n        t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];\n        t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];\n        t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n      }\n      t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n      t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n      t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n      t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n      M[offset] = t0;\n      M[offset + 1] = t1;\n      M[offset + 2] = t2;\n      return M[offset + 3] = t3;\n    };\n\n    return AES;\n\n  })(BlockCipher);\n\n  exports.AES = AES;\n\n}).call(this);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/triplesec/lib/aes.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}}],"sources":{"../node_modules/triplesec/lib/aes.js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var AES, BlockCipher, G, Global, scrub_vec,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  BlockCipher = require('./algbase').BlockCipher;\n\n  scrub_vec = require('./util').scrub_vec;\n\n  Global = (function() {\n    function Global() {\n      var i;\n      this.SBOX = [];\n      this.INV_SBOX = [];\n      this.SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.INV_SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.init();\n      this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n    }\n\n    Global.prototype.init = function() {\n      var d, i, sx, t, x, x2, x4, x8, xi, _i;\n      d = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 256; i = ++_i) {\n          if (i < 128) {\n            _results.push(i << 1);\n          } else {\n            _results.push((i << 1) ^ 0x11b);\n          }\n        }\n        return _results;\n      })();\n      x = 0;\n      xi = 0;\n      for (i = _i = 0; _i < 256; i = ++_i) {\n        sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n        sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n        this.SBOX[x] = sx;\n        this.INV_SBOX[sx] = x;\n        x2 = d[x];\n        x4 = d[x2];\n        x8 = d[x4];\n        t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n        this.SUB_MIX[0][x] = (t << 24) | (t >>> 8);\n        this.SUB_MIX[1][x] = (t << 16) | (t >>> 16);\n        this.SUB_MIX[2][x] = (t << 8) | (t >>> 24);\n        this.SUB_MIX[3][x] = t;\n        t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n        this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);\n        this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);\n        this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);\n        this.INV_SUB_MIX[3][sx] = t;\n        if (x === 0) {\n          x = xi = 1;\n        } else {\n          x = x2 ^ d[d[d[x8 ^ x2]]];\n          xi ^= d[d[xi]];\n        }\n      }\n      return true;\n    };\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  AES = (function(_super) {\n    __extends(AES, _super);\n\n    AES.blockSize = 4 * 4;\n\n    AES.prototype.blockSize = AES.blockSize;\n\n    AES.keySize = 256 / 8;\n\n    AES.prototype.keySize = AES.keySize;\n\n    AES.ivSize = AES.blockSize;\n\n    AES.prototype.ivSize = AES.ivSize;\n\n    function AES(key) {\n      this._key = key.clone();\n      this._doReset();\n    }\n\n    AES.prototype._doReset = function() {\n      var invKsRow, keySize, keyWords, ksRow, ksRows, t, _i, _j;\n      keyWords = this._key.words;\n      keySize = this._key.sigBytes / 4;\n      this._nRounds = keySize + 6;\n      ksRows = (this._nRounds + 1) * 4;\n      this._keySchedule = [];\n      for (ksRow = _i = 0; 0 <= ksRows ? _i < ksRows : _i > ksRows; ksRow = 0 <= ksRows ? ++_i : --_i) {\n        this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);\n      }\n      this._invKeySchedule = [];\n      for (invKsRow = _j = 0; 0 <= ksRows ? _j < ksRows : _j > ksRows; invKsRow = 0 <= ksRows ? ++_j : --_j) {\n        ksRow = ksRows - invKsRow;\n        t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];\n        this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];\n      }\n      return true;\n    };\n\n    AES.prototype.encryptBlock = function(M, offset) {\n      if (offset == null) {\n        offset = 0;\n      }\n      return this._doCryptBlock(M, offset, this._keySchedule, G.SUB_MIX, G.SBOX);\n    };\n\n    AES.prototype.decryptBlock = function(M, offset) {\n      var _ref, _ref1;\n      if (offset == null) {\n        offset = 0;\n      }\n      _ref = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref[0], M[offset + 3] = _ref[1];\n      this._doCryptBlock(M, offset, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);\n      return _ref1 = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref1[0], M[offset + 3] = _ref1[1], _ref1;\n    };\n\n    AES.prototype.scrub = function() {\n      scrub_vec(this._keySchedule);\n      scrub_vec(this._invKeySchedule);\n      return this._key.scrub();\n    };\n\n    AES.prototype._doCryptBlock = function(M, offset, keySchedule, SUB_MIX, SBOX) {\n      var ksRow, round, s0, s1, s2, s3, t0, t1, t2, t3, _i, _ref;\n      s0 = M[offset] ^ keySchedule[0];\n      s1 = M[offset + 1] ^ keySchedule[1];\n      s2 = M[offset + 2] ^ keySchedule[2];\n      s3 = M[offset + 3] ^ keySchedule[3];\n      ksRow = 4;\n      for (round = _i = 1, _ref = this._nRounds; 1 <= _ref ? _i < _ref : _i > _ref; round = 1 <= _ref ? ++_i : --_i) {\n        t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];\n        t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];\n        t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];\n        t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n      }\n      t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n      t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n      t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n      t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n      M[offset] = t0;\n      M[offset + 1] = t1;\n      M[offset + 2] = t2;\n      return M[offset + 3] = t3;\n    };\n\n    return AES;\n\n  })(BlockCipher);\n\n  exports.AES = AES;\n\n}).call(this);\n"},"lineCount":182}},"error":null,"hash":"a906a03798f233da86098eb3b687dbab","cacheData":{"env":{}}}