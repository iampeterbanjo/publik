{"id":"../node_modules/triplesec/lib/sha1.js","dependencies":[{"name":"/home/iampeterbanjo/projects/blockstack/publik/package.json","includedInParent":true,"mtime":1564724079568},{"name":"/home/iampeterbanjo/projects/blockstack/publik/.babelrc","includedInParent":true,"mtime":1564637765043},{"name":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/package.json","includedInParent":true,"mtime":1564723609021},{"name":"./wordarray","loc":{"line":7,"column":22},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/sha1.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/wordarray.js"},{"name":"./algbase","loc":{"line":9,"column":19},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/sha1.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/algbase.js"}],"generated":{"js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var Hasher, SHA1, W, WordArray, transform,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  W = [];\n\n  SHA1 = (function(_super) {\n    __extends(SHA1, _super);\n\n    function SHA1() {\n      return SHA1.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA1.blockSize = 512 / 32;\n\n    SHA1.prototype.blockSize = SHA1.blockSize;\n\n    SHA1.output_size = 20;\n\n    SHA1.prototype.output_size = SHA1.output_size;\n\n    SHA1.prototype._doReset = function() {\n      return this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\n    };\n\n    SHA1.prototype._doProcessBlock = function(M, offset) {\n      var H, a, b, c, d, e, i, n, t, _i;\n      H = this._hash.words;\n      a = H[0];\n      b = H[1];\n      c = H[2];\n      d = H[3];\n      e = H[4];\n      for (i = _i = 0; _i < 80; i = ++_i) {\n        if (i < 16) {\n          W[i] = M[offset + i] | 0;\n        } else {\n          n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n          W[i] = (n << 1) | (n >>> 31);\n        }\n        t = ((a << 5) | (a >>> 27)) + e + W[i];\n        if (i < 20) {\n          t += ((b & c) | (~b & d)) + 0x5a827999;\n        } else if (i < 40) {\n          t += (b ^ c ^ d) + 0x6ed9eba1;\n        } else if (i < 60) {\n          t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n        } else {\n          t += (b ^ c ^ d) - 0x359d3e2a;\n        }\n        e = d;\n        d = c;\n        c = (b << 30) | (b >>> 2);\n        b = a;\n        a = t;\n      }\n      H[0] = (H[0] + a) | 0;\n      H[1] = (H[1] + b) | 0;\n      H[2] = (H[2] + c) | 0;\n      H[3] = (H[3] + d) | 0;\n      return H[4] = (H[4] + e) | 0;\n    };\n\n    SHA1.prototype._doFinalize = function() {\n      var data, dataWords, nBitsLeft, nBitsTotal;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n      data.sigBytes = dataWords.length * 4;\n      this._process();\n      return this._hash;\n    };\n\n    SHA1.prototype.copy_to = function(obj) {\n      SHA1.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA1.prototype.clone = function() {\n      var out;\n      out = new SHA1();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA1;\n\n  })(Hasher);\n\n  transform = transform = function(x) {\n    var out;\n    out = (new SHA1).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA1 = SHA1;\n\n  exports.transform = transform;\n\n}).call(this);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/triplesec/lib/sha1.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}}],"sources":{"../node_modules/triplesec/lib/sha1.js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var Hasher, SHA1, W, WordArray, transform,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  W = [];\n\n  SHA1 = (function(_super) {\n    __extends(SHA1, _super);\n\n    function SHA1() {\n      return SHA1.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA1.blockSize = 512 / 32;\n\n    SHA1.prototype.blockSize = SHA1.blockSize;\n\n    SHA1.output_size = 20;\n\n    SHA1.prototype.output_size = SHA1.output_size;\n\n    SHA1.prototype._doReset = function() {\n      return this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\n    };\n\n    SHA1.prototype._doProcessBlock = function(M, offset) {\n      var H, a, b, c, d, e, i, n, t, _i;\n      H = this._hash.words;\n      a = H[0];\n      b = H[1];\n      c = H[2];\n      d = H[3];\n      e = H[4];\n      for (i = _i = 0; _i < 80; i = ++_i) {\n        if (i < 16) {\n          W[i] = M[offset + i] | 0;\n        } else {\n          n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n          W[i] = (n << 1) | (n >>> 31);\n        }\n        t = ((a << 5) | (a >>> 27)) + e + W[i];\n        if (i < 20) {\n          t += ((b & c) | (~b & d)) + 0x5a827999;\n        } else if (i < 40) {\n          t += (b ^ c ^ d) + 0x6ed9eba1;\n        } else if (i < 60) {\n          t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n        } else {\n          t += (b ^ c ^ d) - 0x359d3e2a;\n        }\n        e = d;\n        d = c;\n        c = (b << 30) | (b >>> 2);\n        b = a;\n        a = t;\n      }\n      H[0] = (H[0] + a) | 0;\n      H[1] = (H[1] + b) | 0;\n      H[2] = (H[2] + c) | 0;\n      H[3] = (H[3] + d) | 0;\n      return H[4] = (H[4] + e) | 0;\n    };\n\n    SHA1.prototype._doFinalize = function() {\n      var data, dataWords, nBitsLeft, nBitsTotal;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n      data.sigBytes = dataWords.length * 4;\n      this._process();\n      return this._hash;\n    };\n\n    SHA1.prototype.copy_to = function(obj) {\n      SHA1.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA1.prototype.clone = function() {\n      var out;\n      out = new SHA1();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA1;\n\n  })(Hasher);\n\n  transform = transform = function(x) {\n    var out;\n    out = (new SHA1).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA1 = SHA1;\n\n  exports.transform = transform;\n\n}).call(this);\n"},"lineCount":112}},"error":null,"hash":"02bcaf312d690ce7d425901aa4609fef","cacheData":{"env":{}}}