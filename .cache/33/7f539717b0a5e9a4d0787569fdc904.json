{"id":"../node_modules/jsontokens/lib/signer.js","dependencies":[{"name":"/home/iampeterbanjo/projects/blockstack/publik/package.json","includedInParent":true,"mtime":1564724079568},{"name":"/home/iampeterbanjo/projects/blockstack/publik/.babelrc","includedInParent":true,"mtime":1564637765043},{"name":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/package.json","includedInParent":true,"mtime":1564723608937},{"name":"base64url","loc":{"line":12,"column":25},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/signer.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/base64url/index.js"},{"name":"./cryptoClients","loc":{"line":16,"column":29},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/signer.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/cryptoClients/index.js"},{"name":"./errors","loc":{"line":18,"column":22},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/signer.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/errors.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TokenSigner = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createUnsecuredToken = createUnsecuredToken;\n\nvar _base64url = require('base64url');\n\nvar _base64url2 = _interopRequireDefault(_base64url);\n\nvar _cryptoClients = require('./cryptoClients');\n\nvar _errors = require('./errors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createSigningInput(payload, header) {\n    var tokenParts = [];\n\n    // add in the header\n    var encodedHeader = _base64url2.default.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n\n    // add in the payload\n    var encodedPayload = _base64url2.default.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n\n    // prepare the message\n    var signingInput = tokenParts.join('.');\n\n    // return the signing input\n    return signingInput;\n}\n\nfunction createUnsecuredToken(payload) {\n    var header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\n\nvar TokenSigner = function () {\n    function TokenSigner(signingAlgorithm, rawPrivateKey) {\n        _classCallCheck(this, TokenSigner);\n\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new _errors.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!_cryptoClients.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = _cryptoClients.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n\n    _createClass(TokenSigner, [{\n        key: 'header',\n        value: function header() {\n            var _header = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var defaultHeader = { typ: this.tokenType,\n                alg: this.cryptoClient.algorithmName };\n            return Object.assign({}, defaultHeader, _header);\n        }\n    }, {\n        key: 'sign',\n        value: function sign(payload) {\n            var expanded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var customHeader = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n            // generate the token header\n            var header = this.header(customHeader);\n\n            // prepare the message to be signed\n            var signingInput = createSigningInput(payload, header);\n            var signingInputHash = this.cryptoClient.createHash(signingInput);\n\n            // sign the message and add in the signature\n            var signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n\n            if (expanded) {\n                return {\n                    'header': [_base64url2.default.encode(JSON.stringify(header))],\n                    'payload': JSON.stringify(payload),\n                    'signature': [signature]\n                };\n            } else {\n                return [signingInput, signature].join('.');\n            }\n        }\n    }]);\n\n    return TokenSigner;\n}();\n\nexports.TokenSigner = TokenSigner;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/jsontokens/lib/signer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}}],"sources":{"../node_modules/jsontokens/lib/signer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TokenSigner = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createUnsecuredToken = createUnsecuredToken;\n\nvar _base64url = require('base64url');\n\nvar _base64url2 = _interopRequireDefault(_base64url);\n\nvar _cryptoClients = require('./cryptoClients');\n\nvar _errors = require('./errors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createSigningInput(payload, header) {\n    var tokenParts = [];\n\n    // add in the header\n    var encodedHeader = _base64url2.default.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n\n    // add in the payload\n    var encodedPayload = _base64url2.default.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n\n    // prepare the message\n    var signingInput = tokenParts.join('.');\n\n    // return the signing input\n    return signingInput;\n}\n\nfunction createUnsecuredToken(payload) {\n    var header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\n\nvar TokenSigner = function () {\n    function TokenSigner(signingAlgorithm, rawPrivateKey) {\n        _classCallCheck(this, TokenSigner);\n\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new _errors.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!_cryptoClients.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = _cryptoClients.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n\n    _createClass(TokenSigner, [{\n        key: 'header',\n        value: function header() {\n            var _header = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            var defaultHeader = { typ: this.tokenType,\n                alg: this.cryptoClient.algorithmName };\n            return Object.assign({}, defaultHeader, _header);\n        }\n    }, {\n        key: 'sign',\n        value: function sign(payload) {\n            var expanded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var customHeader = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n            // generate the token header\n            var header = this.header(customHeader);\n\n            // prepare the message to be signed\n            var signingInput = createSigningInput(payload, header);\n            var signingInputHash = this.cryptoClient.createHash(signingInput);\n\n            // sign the message and add in the signature\n            var signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n\n            if (expanded) {\n                return {\n                    'header': [_base64url2.default.encode(JSON.stringify(header))],\n                    'payload': JSON.stringify(payload),\n                    'signature': [signature]\n                };\n            } else {\n                return [signingInput, signature].join('.');\n            }\n        }\n    }]);\n\n    return TokenSigner;\n}();\n\nexports.TokenSigner = TokenSigner;"},"lineCount":106}},"error":null,"hash":"1e77a8de4856385545bf5d57306ba059","cacheData":{"env":{}}}