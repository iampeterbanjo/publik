{"id":"../node_modules/triplesec/lib/ripemd160.js","dependencies":[{"name":"/home/iampeterbanjo/projects/blockstack/publik/package.json","includedInParent":true,"mtime":1564724079568},{"name":"/home/iampeterbanjo/projects/blockstack/publik/.babelrc","includedInParent":true,"mtime":1564637765043},{"name":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/package.json","includedInParent":true,"mtime":1564723609021},{"name":"./wordarray","loc":{"line":7,"column":17},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/ripemd160.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/wordarray.js"},{"name":"./algbase","loc":{"line":9,"column":19},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/ripemd160.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/triplesec/lib/algbase.js"}],"generated":{"js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var G, Global, Hasher, RIPEMD160, WordArray, X64Word, X64WordArray, f1, f2, f3, f4, f5, rotl, transform, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./wordarray'), WordArray = _ref.WordArray, X64Word = _ref.X64Word, X64WordArray = _ref.X64WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  Global = (function() {\n    function Global() {\n      this._zl = new WordArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\n      this._zr = new WordArray([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\n      this._sl = new WordArray([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\n      this._sr = new WordArray([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n      this._hl = new WordArray([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n      this._hr = new WordArray([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n    }\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  RIPEMD160 = (function(_super) {\n    __extends(RIPEMD160, _super);\n\n    function RIPEMD160() {\n      return RIPEMD160.__super__.constructor.apply(this, arguments);\n    }\n\n    RIPEMD160.blockSize = 512 / 32;\n\n    RIPEMD160.prototype.blockSize = RIPEMD160.blockSize;\n\n    RIPEMD160.output_size = 160 / 8;\n\n    RIPEMD160.prototype.output_size = RIPEMD160.output_size;\n\n    RIPEMD160.prototype._doReset = function() {\n      return this._hash = new WordArray([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n    };\n\n    RIPEMD160.prototype.get_output_size = function() {\n      return this.output_size;\n    };\n\n    RIPEMD160.prototype._doProcessBlock = function(M, offset) {\n      var H, M_offset_i, al, ar, bl, br, cl, cr, dl, dr, el, er, hl, hr, i, offset_i, sl, sr, t, zl, zr, _i, _j;\n      for (i = _i = 0; _i < 16; i = ++_i) {\n        offset_i = offset + i;\n        M_offset_i = M[offset_i];\n        M[offset_i] = (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00);\n      }\n      H = this._hash.words;\n      hl = G._hl.words;\n      hr = G._hr.words;\n      zl = G._zl.words;\n      zr = G._zr.words;\n      sl = G._sl.words;\n      sr = G._sr.words;\n      ar = al = H[0];\n      br = bl = H[1];\n      cr = cl = H[2];\n      dr = dl = H[3];\n      er = el = H[4];\n      for (i = _j = 0; _j < 80; i = ++_j) {\n        t = (al + M[offset + zl[i]]) | 0;\n        if (i < 16) {\n          t += f1(bl, cl, dl) + hl[0];\n        } else if (i < 32) {\n          t += f2(bl, cl, dl) + hl[1];\n        } else if (i < 48) {\n          t += f3(bl, cl, dl) + hl[2];\n        } else if (i < 64) {\n          t += f4(bl, cl, dl) + hl[3];\n        } else {\n          t += f5(bl, cl, dl) + hl[4];\n        }\n        t = t | 0;\n        t = rotl(t, sl[i]);\n        t = (t + el) | 0;\n        al = el;\n        el = dl;\n        dl = rotl(cl, 10);\n        cl = bl;\n        bl = t;\n        t = (ar + M[offset + zr[i]]) | 0;\n        if (i < 16) {\n          t += f5(br, cr, dr) + hr[0];\n        } else if (i < 32) {\n          t += f4(br, cr, dr) + hr[1];\n        } else if (i < 48) {\n          t += f3(br, cr, dr) + hr[2];\n        } else if (i < 64) {\n          t += f2(br, cr, dr) + hr[3];\n        } else {\n          t += f1(br, cr, dr) + hr[4];\n        }\n        t = t | 0;\n        t = rotl(t, sr[i]);\n        t = (t + er) | 0;\n        ar = er;\n        er = dr;\n        dr = rotl(cr, 10);\n        cr = br;\n        br = t;\n      }\n      t = (H[1] + cl + dr) | 0;\n      H[1] = (H[2] + dl + er) | 0;\n      H[2] = (H[3] + el + ar) | 0;\n      H[3] = (H[4] + al + br) | 0;\n      H[4] = (H[0] + bl + cr) | 0;\n      return H[0] = t;\n    };\n\n    RIPEMD160.prototype._doFinalize = function() {\n      var H, H_i, data, dataWords, hash, i, nBitsLeft, nBitsTotal, _i;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00);\n      data.sigBytes = (dataWords.length + 1) * 4;\n      this._process();\n      hash = this._hash;\n      H = hash.words;\n      for (i = _i = 0; _i < 5; i = ++_i) {\n        H_i = H[i];\n        H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n      }\n      return hash;\n    };\n\n    RIPEMD160.prototype.scrub = function() {\n      return this._hash.scrub();\n    };\n\n    RIPEMD160.prototype.copy_to = function(obj) {\n      RIPEMD160.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    RIPEMD160.prototype.clone = function() {\n      var out;\n      out = new RIPEMD160();\n      this.copy_to(out);\n      return out;\n    };\n\n    return RIPEMD160;\n\n  })(Hasher);\n\n  f1 = function(x, y, z) {\n    return x ^ y ^ z;\n  };\n\n  f2 = function(x, y, z) {\n    return (x & y) | ((~x) & z);\n  };\n\n  f3 = function(x, y, z) {\n    return (x | (~y)) ^ z;\n  };\n\n  f4 = function(x, y, z) {\n    return (x & z) | (y & (~z));\n  };\n\n  f5 = function(x, y, z) {\n    return x ^ (y | (~z));\n  };\n\n  rotl = function(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  };\n\n  transform = function(x) {\n    var out;\n    out = (new RIPEMD160).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.RIPEMD160 = RIPEMD160;\n\n  exports.transform = transform;\n\n}).call(this);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/triplesec/lib/ripemd160.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}}],"sources":{"../node_modules/triplesec/lib/ripemd160.js":"// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var G, Global, Hasher, RIPEMD160, WordArray, X64Word, X64WordArray, f1, f2, f3, f4, f5, rotl, transform, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./wordarray'), WordArray = _ref.WordArray, X64Word = _ref.X64Word, X64WordArray = _ref.X64WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  Global = (function() {\n    function Global() {\n      this._zl = new WordArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\n      this._zr = new WordArray([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\n      this._sl = new WordArray([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\n      this._sr = new WordArray([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n      this._hl = new WordArray([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n      this._hr = new WordArray([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n    }\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  RIPEMD160 = (function(_super) {\n    __extends(RIPEMD160, _super);\n\n    function RIPEMD160() {\n      return RIPEMD160.__super__.constructor.apply(this, arguments);\n    }\n\n    RIPEMD160.blockSize = 512 / 32;\n\n    RIPEMD160.prototype.blockSize = RIPEMD160.blockSize;\n\n    RIPEMD160.output_size = 160 / 8;\n\n    RIPEMD160.prototype.output_size = RIPEMD160.output_size;\n\n    RIPEMD160.prototype._doReset = function() {\n      return this._hash = new WordArray([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n    };\n\n    RIPEMD160.prototype.get_output_size = function() {\n      return this.output_size;\n    };\n\n    RIPEMD160.prototype._doProcessBlock = function(M, offset) {\n      var H, M_offset_i, al, ar, bl, br, cl, cr, dl, dr, el, er, hl, hr, i, offset_i, sl, sr, t, zl, zr, _i, _j;\n      for (i = _i = 0; _i < 16; i = ++_i) {\n        offset_i = offset + i;\n        M_offset_i = M[offset_i];\n        M[offset_i] = (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00);\n      }\n      H = this._hash.words;\n      hl = G._hl.words;\n      hr = G._hr.words;\n      zl = G._zl.words;\n      zr = G._zr.words;\n      sl = G._sl.words;\n      sr = G._sr.words;\n      ar = al = H[0];\n      br = bl = H[1];\n      cr = cl = H[2];\n      dr = dl = H[3];\n      er = el = H[4];\n      for (i = _j = 0; _j < 80; i = ++_j) {\n        t = (al + M[offset + zl[i]]) | 0;\n        if (i < 16) {\n          t += f1(bl, cl, dl) + hl[0];\n        } else if (i < 32) {\n          t += f2(bl, cl, dl) + hl[1];\n        } else if (i < 48) {\n          t += f3(bl, cl, dl) + hl[2];\n        } else if (i < 64) {\n          t += f4(bl, cl, dl) + hl[3];\n        } else {\n          t += f5(bl, cl, dl) + hl[4];\n        }\n        t = t | 0;\n        t = rotl(t, sl[i]);\n        t = (t + el) | 0;\n        al = el;\n        el = dl;\n        dl = rotl(cl, 10);\n        cl = bl;\n        bl = t;\n        t = (ar + M[offset + zr[i]]) | 0;\n        if (i < 16) {\n          t += f5(br, cr, dr) + hr[0];\n        } else if (i < 32) {\n          t += f4(br, cr, dr) + hr[1];\n        } else if (i < 48) {\n          t += f3(br, cr, dr) + hr[2];\n        } else if (i < 64) {\n          t += f2(br, cr, dr) + hr[3];\n        } else {\n          t += f1(br, cr, dr) + hr[4];\n        }\n        t = t | 0;\n        t = rotl(t, sr[i]);\n        t = (t + er) | 0;\n        ar = er;\n        er = dr;\n        dr = rotl(cr, 10);\n        cr = br;\n        br = t;\n      }\n      t = (H[1] + cl + dr) | 0;\n      H[1] = (H[2] + dl + er) | 0;\n      H[2] = (H[3] + el + ar) | 0;\n      H[3] = (H[4] + al + br) | 0;\n      H[4] = (H[0] + bl + cr) | 0;\n      return H[0] = t;\n    };\n\n    RIPEMD160.prototype._doFinalize = function() {\n      var H, H_i, data, dataWords, hash, i, nBitsLeft, nBitsTotal, _i;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00);\n      data.sigBytes = (dataWords.length + 1) * 4;\n      this._process();\n      hash = this._hash;\n      H = hash.words;\n      for (i = _i = 0; _i < 5; i = ++_i) {\n        H_i = H[i];\n        H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n      }\n      return hash;\n    };\n\n    RIPEMD160.prototype.scrub = function() {\n      return this._hash.scrub();\n    };\n\n    RIPEMD160.prototype.copy_to = function(obj) {\n      RIPEMD160.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    RIPEMD160.prototype.clone = function() {\n      var out;\n      out = new RIPEMD160();\n      this.copy_to(out);\n      return out;\n    };\n\n    return RIPEMD160;\n\n  })(Hasher);\n\n  f1 = function(x, y, z) {\n    return x ^ y ^ z;\n  };\n\n  f2 = function(x, y, z) {\n    return (x & y) | ((~x) & z);\n  };\n\n  f3 = function(x, y, z) {\n    return (x | (~y)) ^ z;\n  };\n\n  f4 = function(x, y, z) {\n    return (x & z) | (y & (~z));\n  };\n\n  f5 = function(x, y, z) {\n    return x ^ (y | (~z));\n  };\n\n  rotl = function(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  };\n\n  transform = function(x) {\n    var out;\n    out = (new RIPEMD160).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.RIPEMD160 = RIPEMD160;\n\n  exports.transform = transform;\n\n}).call(this);\n"},"lineCount":194}},"error":null,"hash":"7c5582d0b7f944020c1de70b7bd212f3","cacheData":{"env":{}}}