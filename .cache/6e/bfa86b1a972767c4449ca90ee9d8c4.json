{"id":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","dependencies":[{"name":"/home/iampeterbanjo/projects/blockstack/publik/package.json","includedInParent":true,"mtime":1564724079568},{"name":"/home/iampeterbanjo/projects/blockstack/publik/.babelrc","includedInParent":true,"mtime":1564637765043},{"name":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/package.json","includedInParent":true,"mtime":1564723608937},{"name":"asn1.js","loc":{"line":17,"column":19},"parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/asn1.js/lib/asn1.js"},{"name":"buffer","parent":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","resolved":"/home/iampeterbanjo/projects/blockstack/publik/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*\n * This code is taken from https://github.com/Brightspace/node-ecdsa-sig-formatter\n * which is licensed under the Apache 2.0 license.\n *\n * It got copied over here to make some adjustments for being compatible with browserify.\n * Going forward would be either simplifying this code (as we only need 256 bit signatures),\n * or moving back to the direct dependency; both is future work(TM) for some other day.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.derToJose = derToJose;\nexports.joseToDer = joseToDer;\nvar asn1 = require('asn1.js');\n\nfunction base64UrlEscape(str) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nvar ECDSASigValue = asn1.define('ECDSASigValue', function () {\n    this.seq().obj(this.key('r').int(), this.key('s').int());\n});\n\nvar seq = 0x10,\n    int = 0x02;\n\nfunction getParamSize(keySize) {\n    var result = (keySize / 8 | 0) + (keySize % 8 === 0 ? 0 : 1);\n    return result;\n}\n\nvar paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(512)\n};\n\nfunction getParamBytesForAlg(alg) {\n    var paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n\n    throw new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nfunction bignumToBuf(bn, numBytes) {\n    var buf = Buffer.from(bn.toString('hex', numBytes), 'hex');\n    return buf;\n}\n\nfunction signatureAsBuffer(signature) {\n    if (Buffer.isBuffer(signature)) {\n        return Buffer.from(signature);\n    } else if ('string' === typeof signature) {\n        return Buffer.from(signature, 'base64');\n    }\n\n    throw new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction reduceBuffer(buf) {\n    var padding = 0;\n    for (var n = buf.length; padding < n && buf[padding] === 0;) {\n        ++padding;\n    }\n\n    var needsSign = buf[padding] >= 0x80;\n    if (needsSign) {\n        --padding;\n\n        if (padding < 0) {\n            var old = buf;\n            buf = Buffer.alloc(1 + buf.length);\n            buf[0] = 0;\n            old.copy(buf, 1);\n\n            return buf;\n        }\n    }\n\n    if (padding === 0) {\n        return buf;\n    }\n\n    buf = buf.slice(padding);\n    return buf;\n}\n\nfunction derToJose(signature, alg) {\n    signature = signatureAsBuffer(signature);\n    var paramBytes = getParamBytesForAlg(alg);\n\n    signature = ECDSASigValue.decode(signature, 'der');\n\n    var r = bignumToBuf(signature.r, paramBytes);\n    var s = bignumToBuf(signature.s, paramBytes);\n\n    signature = Buffer.concat([r, s], r.length + s.length);\n    signature = signature.toString('base64');\n    signature = base64UrlEscape(signature);\n\n    return signature;\n}\n\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBuffer(signature);\n    var paramBytes = getParamBytesForAlg(alg);\n\n    var signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n    }\n\n    var r = reduceBuffer(signature.slice(0, paramBytes));\n    var s = reduceBuffer(signature.slice(paramBytes));\n\n    var rsBytes = 1 + 1 + r.length + 1 + 1 + s.length;\n\n    var oneByteLength = rsBytes < 0x80;\n\n    signature = Buffer.alloc((oneByteLength ? 2 : 3) + rsBytes);\n\n    var offset = 0;\n    signature[offset++] = seq | 0x20 | 0 << 6;\n    if (oneByteLength) {\n        signature[offset++] = rsBytes;\n    } else {\n        signature[offset++] = 0x80 | 1;\n        signature[offset++] = rsBytes & 0xff;\n    }\n    signature[offset++] = int | 0 << 6;\n    signature[offset++] = r.length;\n    r.copy(signature, offset);\n    offset += r.length;\n    signature[offset++] = int | 0 << 6;\n    signature[offset++] = s.length;\n    s.copy(signature, offset);\n\n    return signature;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}}],"sources":{"../node_modules/jsontokens/lib/cryptoClients/ecdsaSigFormatter.js":"/*\n * This code is taken from https://github.com/Brightspace/node-ecdsa-sig-formatter\n * which is licensed under the Apache 2.0 license.\n *\n * It got copied over here to make some adjustments for being compatible with browserify.\n * Going forward would be either simplifying this code (as we only need 256 bit signatures),\n * or moving back to the direct dependency; both is future work(TM) for some other day.\n */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.derToJose = derToJose;\nexports.joseToDer = joseToDer;\nvar asn1 = require('asn1.js');\n\nfunction base64UrlEscape(str) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nvar ECDSASigValue = asn1.define('ECDSASigValue', function () {\n    this.seq().obj(this.key('r').int(), this.key('s').int());\n});\n\nvar seq = 0x10,\n    int = 0x02;\n\nfunction getParamSize(keySize) {\n    var result = (keySize / 8 | 0) + (keySize % 8 === 0 ? 0 : 1);\n    return result;\n}\n\nvar paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(512)\n};\n\nfunction getParamBytesForAlg(alg) {\n    var paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n\n    throw new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nfunction bignumToBuf(bn, numBytes) {\n    var buf = Buffer.from(bn.toString('hex', numBytes), 'hex');\n    return buf;\n}\n\nfunction signatureAsBuffer(signature) {\n    if (Buffer.isBuffer(signature)) {\n        return Buffer.from(signature);\n    } else if ('string' === typeof signature) {\n        return Buffer.from(signature, 'base64');\n    }\n\n    throw new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction reduceBuffer(buf) {\n    var padding = 0;\n    for (var n = buf.length; padding < n && buf[padding] === 0;) {\n        ++padding;\n    }\n\n    var needsSign = buf[padding] >= 0x80;\n    if (needsSign) {\n        --padding;\n\n        if (padding < 0) {\n            var old = buf;\n            buf = Buffer.alloc(1 + buf.length);\n            buf[0] = 0;\n            old.copy(buf, 1);\n\n            return buf;\n        }\n    }\n\n    if (padding === 0) {\n        return buf;\n    }\n\n    buf = buf.slice(padding);\n    return buf;\n}\n\nfunction derToJose(signature, alg) {\n    signature = signatureAsBuffer(signature);\n    var paramBytes = getParamBytesForAlg(alg);\n\n    signature = ECDSASigValue.decode(signature, 'der');\n\n    var r = bignumToBuf(signature.r, paramBytes);\n    var s = bignumToBuf(signature.s, paramBytes);\n\n    signature = Buffer.concat([r, s], r.length + s.length);\n    signature = signature.toString('base64');\n    signature = base64UrlEscape(signature);\n\n    return signature;\n}\n\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBuffer(signature);\n    var paramBytes = getParamBytesForAlg(alg);\n\n    var signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n    }\n\n    var r = reduceBuffer(signature.slice(0, paramBytes));\n    var s = reduceBuffer(signature.slice(paramBytes));\n\n    var rsBytes = 1 + 1 + r.length + 1 + 1 + s.length;\n\n    var oneByteLength = rsBytes < 0x80;\n\n    signature = Buffer.alloc((oneByteLength ? 2 : 3) + rsBytes);\n\n    var offset = 0;\n    signature[offset++] = seq | 0x20 | 0 << 6;\n    if (oneByteLength) {\n        signature[offset++] = rsBytes;\n    } else {\n        signature[offset++] = 0x80 | 1;\n        signature[offset++] = rsBytes & 0xff;\n    }\n    signature[offset++] = int | 0 << 6;\n    signature[offset++] = r.length;\n    r.copy(signature, offset);\n    offset += r.length;\n    signature[offset++] = int | 0 << 6;\n    signature[offset++] = s.length;\n    s.copy(signature, offset);\n\n    return signature;\n}"},"lineCount":145}},"error":null,"hash":"dad2ff6a1a475fb5455bdf90f836936b","cacheData":{"env":{}}}